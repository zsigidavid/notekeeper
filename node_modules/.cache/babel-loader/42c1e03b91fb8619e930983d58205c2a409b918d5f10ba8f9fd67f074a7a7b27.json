{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\David\\\\Desktop\\\\notekeeper\\\\src\\\\pages\\\\Register.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport { TextField, Button, Typography, Container, Box } from '@mui/material';\nimport { registerUser } from '../services/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n  const navigate = useNavigate();\n  const validatePassword = pw => {\n    if (pw.length < 8) {\n      return 'Password must be at least 8 characters long.';\n    }\n    if (!/[A-Z]/.test(pw)) {\n      return 'Password must contain at least one uppercase letter.';\n    }\n    if (!/[0-9]/.test(pw)) {\n      return 'Password must contain at least one number.';\n    }\n    return '';\n  };\n  const handlePasswordChange = e => {\n    const newPassword = e.target.value;\n    setPassword(newPassword);\n    const validationMsg = validatePassword(newPassword);\n    setPasswordError(validationMsg);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const validationMsg = validatePassword(password);\n    if (validationMsg) {\n      setPasswordError(validationMsg);\n      return;\n    }\n    try {\n      await registerUser(username, email, password);\n      navigate('/login');\n    } catch (err) {\n      setError('Registration failed. Please try again.');\n      console.error('Registration error:', err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        marginTop: 8,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        children: \"Sign up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        onSubmit: handleSubmit,\n        sx: {\n          mt: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          id: \"username\",\n          label: \"Username\",\n          name: \"username\",\n          autoComplete: \"username\",\n          autoFocus: true,\n          value: username,\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          id: \"email\",\n          label: \"Email Address\",\n          name: \"email\",\n          autoComplete: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          name: \"password\",\n          label: \"Password\",\n          type: \"password\",\n          id: \"password\",\n          autoComplete: \"new-password\",\n          value: password,\n          onChange: handlePasswordChange,\n          error: !!passwordError,\n          helperText: passwordError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"error\",\n          sx: {\n            mt: 1\n          },\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"contained\",\n          sx: {\n            mt: 3,\n            mb: 2\n          },\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          style: {\n            textDecoration: 'none'\n          },\n          children: \"Already have an account? Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"lzhzzTfSfj7spuemy4enTi+/mnU=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","useNavigate","Link","TextField","Button","Typography","Container","Box","registerUser","jsxDEV","_jsxDEV","Register","_s","username","setUsername","email","setEmail","password","setPassword","error","setError","passwordError","setPasswordError","navigate","validatePassword","pw","length","test","handlePasswordChange","e","newPassword","target","value","validationMsg","handleSubmit","preventDefault","err","console","component","maxWidth","children","sx","marginTop","display","flexDirection","alignItems","variant","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","mt","margin","required","fullWidth","id","label","name","autoComplete","autoFocus","onChange","type","helperText","color","mb","to","style","textDecoration","_c","$RefreshReg$"],"sources":["C:/Users/David/Desktop/notekeeper/src/pages/Register.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\nimport { TextField, Button, Typography, Container, Box } from '@mui/material';\r\nimport { registerUser } from '../services/auth';\r\n\r\nconst Register: React.FC = () => {\r\n  const [username, setUsername] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [passwordError, setPasswordError] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const validatePassword = (pw: string) => {\r\n    if (pw.length < 8) {\r\n      return 'Password must be at least 8 characters long.';\r\n    }\r\n    if (!/[A-Z]/.test(pw)) {\r\n      return 'Password must contain at least one uppercase letter.';\r\n    }\r\n    if (!/[0-9]/.test(pw)) {\r\n      return 'Password must contain at least one number.';\r\n    }\r\n    return '';\r\n  };\r\n\r\n  const handlePasswordChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const newPassword = e.target.value;\r\n    setPassword(newPassword);\r\n    const validationMsg = validatePassword(newPassword);\r\n    setPasswordError(validationMsg);\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    const validationMsg = validatePassword(password);\r\n    if (validationMsg) {\r\n      setPasswordError(validationMsg);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await registerUser(username, email, password);\r\n      navigate('/login');\r\n    } catch (err) {\r\n      setError('Registration failed. Please try again.');\r\n      console.error('Registration error:', err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <Box\r\n        sx={{\r\n          marginTop: 8,\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          alignItems: 'center',\r\n        }}\r\n      >\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography>\r\n        <Box component=\"form\" onSubmit={handleSubmit} sx={{ mt: 1 }}>\r\n          <TextField\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"username\"\r\n            label=\"Username\"\r\n            name=\"username\"\r\n            autoComplete=\"username\"\r\n            autoFocus\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n          />\r\n          <TextField\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n          <TextField\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"new-password\"\r\n            value={password}\r\n            onChange={handlePasswordChange}\r\n            error={!!passwordError}\r\n            helperText={passwordError}\r\n          />\r\n          {error && (\r\n            <Typography color=\"error\" sx={{ mt: 1 }}>\r\n              {error}\r\n            </Typography>\r\n          )}\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            sx={{ mt: 3, mb: 2 }}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          <Link to=\"/login\" style={{ textDecoration: 'none' }}>\r\n            {\"Already have an account? Sign In\"}\r\n          </Link>\r\n        </Box>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Register;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}