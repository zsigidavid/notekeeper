{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\David\\\\Desktop\\\\notekeeper\\\\src\\\\pages\\\\Notes.tsx\",\n  _s = $RefreshSig$();\n// src/pages/Notes.tsx\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom'; // Importáljuk a useNavigate-t\n// Hozzáadtuk az AppBar, Toolbar importokat\nimport { TextField, Button, Typography, Container, Box, List, ListItem, ListItemText, IconButton, AppBar, Toolbar, Alert } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport { fetchNotes, createNote, updateNote, deleteNote } from '../services/notes';\nimport { logout } from '../store/slices/authSlice'; // Importáljuk a logout action-t\nimport axios from 'axios'; // *** EZT AZ IMPORTOT MOST HOZZÁADTUK ***\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Notes = () => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const [notes, setNotes] = useState([]);\n  const [editingNote, setEditingNote] = useState(null);\n  const token = useSelector(state => state.auth.token);\n\n  // State a siker és hiba üzenetekhez\n  const [successMessage, setSuccessMessage] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const dispatch = useDispatch(); // Használjuk a useDispatch hookot\n  const navigate = useNavigate(); // Használjuk a useNavigate hookot\n\n  // Üzenetek törlésére szolgáló segédfüggvény\n  const clearMessages = () => {\n    setSuccessMessage('');\n    setErrorMessage('');\n  };\n  useEffect(() => {\n    loadNotes();\n  }, [token]);\n  const loadNotes = async () => {\n    // Töröljük az előző üzeneteket, mielőtt újratöltjük a jegyzeteket\n    clearMessages();\n    try {\n      const response = await fetchNotes(token);\n      setNotes(response);\n    } catch (err) {\n      console.error('Failed to load notes:', err);\n      // Ha a token érvénytelen vagy lejárt, lehet, hogy ki kell léptetni a felhasználót\n      if (axios.isAxiosError(err) && err.response && err.response.status === 401) {\n        dispatch(logout());\n        navigate('/login');\n      } else {\n        // Általános hiba üzenet megjelenítése\n        setErrorMessage('Failed to load notes.');\n      }\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    // Töröljük az előző üzeneteket\n    clearMessages();\n\n    // Alap validáció: cím és tartalom nem lehet üres\n    if (!title.trim() || !content.trim()) {\n      // Használjuk a trim()-et a whitespace-ek eltávolítására\n      setErrorMessage('Title and content cannot be empty.');\n      // Ne állítsuk be a mező specifikus hibát itt, mert azt a helperText kezeli\n      return; // Ne küldjük el a formot, ha van validációs hiba\n    }\n    try {\n      if (editingNote) {\n        await updateNote(editingNote._id, {\n          title,\n          content\n        }, token);\n        setSuccessMessage('Note updated successfully!'); // Siker üzenet beállítása\n      } else {\n        await createNote({\n          title,\n          content\n        }, token);\n        setSuccessMessage('Note created successfully!'); // Siker üzenet beállítása\n      }\n      setTitle(''); // Üres mezők sikeres mentés után\n      setContent('');\n      setEditingNote(null); // Szerkesztési mód kikapcsolása\n      loadNotes(); // Jegyzetek újratöltése\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error('Failed to save note:', err);\n      // Próbáljuk meg kiolvasni a hibaüzenetet a backend válaszából, ha elérhető\n      const backendErrorMessage = axios.isAxiosError(err) && ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error);\n      setErrorMessage(`Failed to save note: ${backendErrorMessage || 'Unknown error'}`);\n    }\n    // Üzenetek törlése 3 másodperc múlva\n    // setTimeout(clearMessages, 3000); // Comment out or remove this timeout for now to see messages\n  };\n  const handleEdit = note => {\n    // Szerkesztéskor töröljük az üzeneteket\n    clearMessages();\n    setEditingNote(note);\n    setTitle(note.title);\n    setContent(note.content);\n  };\n  const handleDelete = async id => {\n    // Törléskor töröljük az üzeneteket\n    clearMessages();\n    try {\n      await deleteNote(id, token);\n      setSuccessMessage('Note deleted successfully!'); // Siker üzenet beállítása\n      loadNotes(); // Jegyzetek újratöltése\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      console.error('Failed to delete note:', err);\n      const backendErrorMessage = axios.isAxiosError(err) && ((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.error);\n      setErrorMessage(`Failed to delete note: ${backendErrorMessage || 'Unknown error'}`); // Hiba üzenet beállítása\n    }\n    // Üzenetek törlése 3 másodperc múlva\n    // setTimeout(clearMessages, 3000); // Comment out or remove this timeout for now to see messages\n  };\n\n  // Kilépés kezelő függvény\n  const handleLogout = () => {\n    dispatch(logout()); // Küldjük a logout action-t a Redux store-nak\n    navigate('/login'); // Navigáljunk a bejelentkező oldalra\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      flexGrow: 1\n    },\n    children: [\" \", /*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          component: \"div\",\n          sx: {\n            flexGrow: 1\n          },\n          children: \"My Notes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"inherit\",\n          onClick: handleLogout,\n          children: [\" \", \"Logout\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      component: \"main\",\n      maxWidth: \"md\",\n      sx: {\n        mt: 4\n      },\n      children: [\" \", successMessage && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"success\",\n        sx: {\n          mb: 2\n        },\n        children: successMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        sx: {\n          mb: 2\n        },\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        onSubmit: handleSubmit,\n        sx: {\n          mb: 4\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Title\",\n          value: title,\n          onChange: e => setTitle(e.target.value),\n          margin: \"normal\",\n          required: true // Kötelező mező a HTML5 validációhoz\n          ,\n          error: !!errorMessage && !title.trim() // Hiba jelzése, ha van általános hibaüzenet ÉS üres a cím (vagy a backend küldött címmel kapcsolatos hibát)\n          ,\n          helperText: !!errorMessage && !title.trim() ? 'Title is required.' : '' // Hibaüzenet a címhez (vagy backend hiba)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Content\",\n          value: content,\n          onChange: e => setContent(e.target.value),\n          margin: \"normal\",\n          multiline: true,\n          rows: 4,\n          required: true // Kötelező mező a HTML5 validációhoz\n          ,\n          error: !!errorMessage && !content.trim() // Hiba jelzése, ha van általános hibaüzenet ÉS üres a tartalom (vagy backend küldött tartalommal kapcsolatos hibát)\n          ,\n          helperText: !!errorMessage && !content.trim() ? 'Content is required.' : '' // Hibaüzenet a tartalomhoz (vagy backend hiba)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          sx: {\n            mt: 2\n          },\n          children: editingNote ? 'Update Note' : 'Add Note'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), editingNote &&\n        /*#__PURE__*/\n        // Szerkesztés módban megjelenő \"Cancel\" gomb\n        _jsxDEV(Button, {\n          variant: \"outlined\",\n          sx: {\n            mt: 2,\n            ml: 2\n          },\n          onClick: () => {\n            setEditingNote(null);\n            setTitle('');\n            setContent('');\n            clearMessages();\n          },\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: notes.map(note => /*#__PURE__*/_jsxDEV(ListItem, {\n          secondaryAction: /*#__PURE__*/_jsxDEV(Box, {\n            children: [/*#__PURE__*/_jsxDEV(IconButton, {\n              edge: \"end\",\n              \"aria-label\": \"edit\",\n              onClick: () => handleEdit(note),\n              children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              edge: \"end\",\n              \"aria-label\": \"delete\",\n              onClick: () => handleDelete(note._id),\n              children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 17\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: note.title,\n            secondary: note.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 15\n          }, this)\n        }, note._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), notes.length === 0 && !errorMessage && /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        color: \"textSecondary\",\n        align: \"center\",\n        sx: {\n          mt: 4\n        },\n        children: \"No notes yet. Add one above!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n};\n_s(Notes, \"iJ1IyTjRT190N+yxrT4hySOGDD4=\", false, function () {\n  return [useSelector, useDispatch, useNavigate];\n});\n_c = Notes;\nexport default Notes;\nvar _c;\n$RefreshReg$(_c, \"Notes\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","useNavigate","TextField","Button","Typography","Container","Box","List","ListItem","ListItemText","IconButton","AppBar","Toolbar","Alert","DeleteIcon","EditIcon","fetchNotes","createNote","updateNote","deleteNote","logout","axios","jsxDEV","_jsxDEV","Notes","_s","title","setTitle","content","setContent","notes","setNotes","editingNote","setEditingNote","token","state","auth","successMessage","setSuccessMessage","errorMessage","setErrorMessage","dispatch","navigate","clearMessages","loadNotes","response","err","console","error","isAxiosError","status","handleSubmit","e","preventDefault","trim","_id","_err$response","_err$response$data","backendErrorMessage","data","handleEdit","note","handleDelete","id","_err$response2","_err$response2$data","handleLogout","sx","flexGrow","children","position","variant","component","fileName","_jsxFileName","lineNumber","columnNumber","color","onClick","maxWidth","mt","severity","mb","onSubmit","fullWidth","label","value","onChange","target","margin","required","helperText","multiline","rows","type","ml","map","secondaryAction","edge","primary","secondary","length","align","_c","$RefreshReg$"],"sources":["C:/Users/David/Desktop/notekeeper/src/pages/Notes.tsx"],"sourcesContent":["// src/pages/Notes.tsx\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom'; // Importáljuk a useNavigate-t\r\n// Hozzáadtuk az AppBar, Toolbar importokat\r\nimport { TextField, Button, Typography, Container, Box, List, ListItem, ListItemText, IconButton, AppBar, Toolbar, Alert } from '@mui/material';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport { RootState } from '../store/store';\r\nimport { fetchNotes, createNote, updateNote, deleteNote } from '../services/notes';\r\nimport { logout } from '../store/slices/authSlice'; // Importáljuk a logout action-t\r\nimport axios from 'axios'; // *** EZT AZ IMPORTOT MOST HOZZÁADTUK ***\r\n\r\ninterface Note {\r\n  _id: string;\r\n  title: string;\r\n  content: string;\r\n}\r\n\r\nconst Notes: React.FC = () => {\r\n  const [title, setTitle] = useState('');\r\n  const [content, setContent] = useState('');\r\n  const [notes, setNotes] = useState<Note[]>([]);\r\n  const [editingNote, setEditingNote] = useState<Note | null>(null);\r\n  const token = useSelector((state: RootState) => state.auth.token);\r\n\r\n  // State a siker és hiba üzenetekhez\r\n  const [successMessage, setSuccessMessage] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  const dispatch = useDispatch(); // Használjuk a useDispatch hookot\r\n  const navigate = useNavigate(); // Használjuk a useNavigate hookot\r\n\r\n  // Üzenetek törlésére szolgáló segédfüggvény\r\n  const clearMessages = () => {\r\n    setSuccessMessage('');\r\n    setErrorMessage('');\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadNotes();\r\n  }, [token]);\r\n\r\n  const loadNotes = async () => {\r\n    // Töröljük az előző üzeneteket, mielőtt újratöltjük a jegyzeteket\r\n    clearMessages();\r\n    try {\r\n      const response = await fetchNotes(token!);\r\n      setNotes(response);\r\n    } catch (err) {\r\n      console.error('Failed to load notes:', err);\r\n      // Ha a token érvénytelen vagy lejárt, lehet, hogy ki kell léptetni a felhasználót\r\n      if (axios.isAxiosError(err) && err.response && err.response.status === 401) {\r\n        dispatch(logout());\r\n        navigate('/login');\r\n      } else {\r\n        // Általános hiba üzenet megjelenítése\r\n        setErrorMessage('Failed to load notes.');\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    // Töröljük az előző üzeneteket\r\n    clearMessages();\r\n\r\n    // Alap validáció: cím és tartalom nem lehet üres\r\n    if (!title.trim() || !content.trim()) { // Használjuk a trim()-et a whitespace-ek eltávolítására\r\n        setErrorMessage('Title and content cannot be empty.');\r\n        // Ne állítsuk be a mező specifikus hibát itt, mert azt a helperText kezeli\r\n        return; // Ne küldjük el a formot, ha van validációs hiba\r\n    }\r\n\r\n    try {\r\n      if (editingNote) {\r\n        await updateNote(editingNote._id, { title, content }, token!);\r\n        setSuccessMessage('Note updated successfully!'); // Siker üzenet beállítása\r\n      } else {\r\n        await createNote({ title, content }, token!);\r\n        setSuccessMessage('Note created successfully!'); // Siker üzenet beállítása\r\n      }\r\n      setTitle(''); // Üres mezők sikeres mentés után\r\n      setContent('');\r\n      setEditingNote(null); // Szerkesztési mód kikapcsolása\r\n      loadNotes(); // Jegyzetek újratöltése\r\n    } catch (err) {\r\n      console.error('Failed to save note:', err);\r\n      // Próbáljuk meg kiolvasni a hibaüzenetet a backend válaszából, ha elérhető\r\n      const backendErrorMessage = axios.isAxiosError(err) && err.response?.data?.error;\r\n      setErrorMessage(`Failed to save note: ${backendErrorMessage || 'Unknown error'}`);\r\n    }\r\n    // Üzenetek törlése 3 másodperc múlva\r\n    // setTimeout(clearMessages, 3000); // Comment out or remove this timeout for now to see messages\r\n  };\r\n\r\n  const handleEdit = (note: Note) => {\r\n    // Szerkesztéskor töröljük az üzeneteket\r\n    clearMessages();\r\n    setEditingNote(note);\r\n    setTitle(note.title);\r\n    setContent(note.content);\r\n  };\r\n\r\n  const handleDelete = async (id: string) => {\r\n     // Törléskor töröljük az üzeneteket\r\n    clearMessages();\r\n    try {\r\n      await deleteNote(id, token!);\r\n      setSuccessMessage('Note deleted successfully!'); // Siker üzenet beállítása\r\n      loadNotes(); // Jegyzetek újratöltése\r\n    } catch (err) {\r\n      console.error('Failed to delete note:', err);\r\n       const backendErrorMessage = axios.isAxiosError(err) && err.response?.data?.error;\r\n       setErrorMessage(`Failed to delete note: ${backendErrorMessage || 'Unknown error'}`); // Hiba üzenet beállítása\r\n    }\r\n    // Üzenetek törlése 3 másodperc múlva\r\n    // setTimeout(clearMessages, 3000); // Comment out or remove this timeout for now to see messages\r\n  };\r\n\r\n  // Kilépés kezelő függvény\r\n  const handleLogout = () => {\r\n    dispatch(logout()); // Küldjük a logout action-t a Redux store-nak\r\n    navigate('/login'); // Navigáljunk a bejelentkező oldalra\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ flexGrow: 1 }}> {/* AppBar konténer */}\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n            My Notes\r\n          </Typography>\r\n          <Button color=\"inherit\" onClick={handleLogout}> {/* Kilépés gomb */}\r\n            Logout\r\n          </Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Container component=\"main\" maxWidth=\"md\" sx={{ mt: 4 }}> {/* Tartalom konténer */}\r\n        {/* Siker üzenet megjelenítése Alert komponensben */}\r\n        {successMessage && (\r\n            <Alert severity=\"success\" sx={{ mb: 2 }}>\r\n                {successMessage}\r\n            </Alert>\r\n        )}\r\n         {/* Hiba üzenet megjelenítése Alert komponensben */}\r\n        {errorMessage && (\r\n            <Alert severity=\"error\" sx={{ mb: 2 }}>\r\n                {errorMessage}\r\n            </Alert>\r\n        )}\r\n\r\n        <Box component=\"form\" onSubmit={handleSubmit} sx={{ mb: 4 }}>\r\n          <TextField\r\n            fullWidth\r\n            label=\"Title\"\r\n            value={title}\r\n            onChange={(e) => setTitle(e.target.value)}\r\n            margin=\"normal\"\r\n            required // Kötelező mező a HTML5 validációhoz\r\n            error={!!errorMessage && !title.trim()} // Hiba jelzése, ha van általános hibaüzenet ÉS üres a cím (vagy a backend küldött címmel kapcsolatos hibát)\r\n            helperText={!!errorMessage && !title.trim() ? 'Title is required.' : ''} // Hibaüzenet a címhez (vagy backend hiba)\r\n          />\r\n          <TextField\r\n            fullWidth\r\n            label=\"Content\"\r\n            value={content}\r\n            onChange={(e) => setContent(e.target.value)}\r\n            margin=\"normal\"\r\n            multiline\r\n            rows={4}\r\n            required // Kötelező mező a HTML5 validációhoz\r\n            error={!!errorMessage && !content.trim()} // Hiba jelzése, ha van általános hibaüzenet ÉS üres a tartalom (vagy backend küldött tartalommal kapcsolatos hibát)\r\n            helperText={!!errorMessage && !content.trim() ? 'Content is required.' : ''} // Hibaüzenet a tartalomhoz (vagy backend hiba)\r\n          />\r\n          <Button type=\"submit\" variant=\"contained\" sx={{ mt: 2 }}>\r\n            {editingNote ? 'Update Note' : 'Add Note'}\r\n          </Button>\r\n          {editingNote && ( // Szerkesztés módban megjelenő \"Cancel\" gomb\r\n            <Button variant=\"outlined\" sx={{ mt: 2, ml: 2 }} onClick={() => { setEditingNote(null); setTitle(''); setContent(''); clearMessages(); }}>\r\n              Cancel\r\n            </Button>\r\n          )}\r\n        </Box>\r\n        <List>\r\n          {notes.map((note) => (\r\n            <ListItem\r\n              key={note._id}\r\n              secondaryAction={\r\n                <Box>\r\n                  {/* Hozzáadott aria-label a jobb akadálymentesítéshez */}\r\n                  <IconButton edge=\"end\" aria-label=\"edit\" onClick={() => handleEdit(note)}>\r\n                    <EditIcon />\r\n                  </IconButton>\r\n                  {/* Hozzáadott aria-label a jobb akadálymentesítéshez */}\r\n                  <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => handleDelete(note._id)}>\r\n                    <DeleteIcon />\r\n                  </IconButton>\r\n                </Box>\r\n              }\r\n            >\r\n              <ListItemText\r\n                primary={note.title}\r\n                secondary={note.content}\r\n              />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        {/* Üres jegyzetlista esetén üzenet */}\r\n        {notes.length === 0 && !errorMessage && (\r\n             <Typography variant=\"body1\" color=\"textSecondary\" align=\"center\" sx={{ mt: 4 }}>\r\n                 No notes yet. Add one above!\r\n             </Typography>\r\n        )}\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Notes;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}